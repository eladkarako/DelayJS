function log(a){window.console&&window.console.log&&window.console.log(a)}function DelayJS(a){var b,d;if("function"!=typeof a.condition_function)throw'error 001: missing "conditional_function"!';if("function"!=typeof a.condition_callback)throw'error 002: missing "condition_callback"!';return a={}.nExtend({delay_number:1e3,limit_number:1,limit_callback:function(){},DEBUG_MODE:!1}).nExtend(a).nExtend({LAST:a.NOW||0,NOW:1*new Date}),b="DEBUG NOTICE: ->DelayJS(*#): ".replace("#",a.limit_number.toString()),a.DEBUG_MODE&&log(b+" hello! (~ "+(0===a.LAST?"first time!":"->"+(a.NOW-a.LAST).toString()+" ms ago")+" ~)"),d=a.condition_function(),a.DEBUG_MODE&&log(b+" condition is $$.".replace("$$",d.toString())),!0===d?(a.condition_callback(),!0):0===a.limit_number-1?(a.DEBUG_MODE&&log(b+" limit reached."),a.limit_callback(),!1):(a.DEBUG_MODE&&log(b+" waiting $$ milliseconds.".replace("$$",a.delay_number)),a.DEBUG_MODE&&log(""),setTimeout(function(){DelayJS(a.nExtend({limit_number:a.limit_number-1}))},a.delay_number),void 0)}Object.prototype.nExtend=function(a){var b;for(b in a)a.hasOwnProperty(b)&&(this[b]=a[b]);return this};

//--- test it ---/

DelayJS({
  condition_function: function() {
    return "hello" === document.title; //you can change this on runtime using console to see the timer stops
  },
  condition_callback: function() {
    console.log('done! yeepppeee!!!!');
  },
  delay_number:       2000,
  limit_number:       3,
  limit_callback:     function() {
    console.log("limit reached!");
  },

  DEBUG_MODE: true
});
